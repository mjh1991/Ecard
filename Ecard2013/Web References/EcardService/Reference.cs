//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace Ecard2013.EcardService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback setPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWorkMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBackTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMoneyThisMonthOperationCompleted;
        
        private System.Threading.SendOrPostCallback hasUnReceivedMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback isLastReceiveMoreThan16OperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePasswdOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginWebOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJhByGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRecordByJhOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAutoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCZJLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXFJLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getXFHZOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGYXFHZOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCustomerInfoByCardNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOtherRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnReceivedOtherOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllOtherRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOtherRecordByTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnfinishedRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecordByTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback addMoneyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMoneyManualOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getValidDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewValidDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback setValidDateOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback setValidDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOtherRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOtherRecordByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback importOtherRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback importFLRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCanBuOperationCompleted;
        
        private System.Threading.SendOrPostCallback canBuChengWuKaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChongZhiOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRyxxFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRyxxFLKaiOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRyxxByOneFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback existKhOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNewValidDateFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback setNewCardFLOperationCompleted;
        
        private System.Threading.SendOrPostCallback KaiXinKaFLExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback KaiXinKaFLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Ecard2013.Properties.Settings.Default.Ecard2013_EcardService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event setPlaceCompletedEventHandler setPlaceCompleted;
        
        /// <remarks/>
        public event getWorkTimeCompletedEventHandler getWorkTimeCompleted;
        
        /// <remarks/>
        public event getWorkMoneyCompletedEventHandler getWorkMoneyCompleted;
        
        /// <remarks/>
        public event getBackTimeCompletedEventHandler getBackTimeCompleted;
        
        /// <remarks/>
        public event getMoneyThisMonthCompletedEventHandler getMoneyThisMonthCompleted;
        
        /// <remarks/>
        public event hasUnReceivedMoneyCompletedEventHandler hasUnReceivedMoneyCompleted;
        
        /// <remarks/>
        public event isLastReceiveMoreThan16CompletedEventHandler isLastReceiveMoreThan16Completed;
        
        /// <remarks/>
        public event updatePasswdCompletedEventHandler updatePasswdCompleted;
        
        /// <remarks/>
        public event LoginIPCompletedEventHandler LoginIPCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LoginWebCompletedEventHandler LoginWebCompleted;
        
        /// <remarks/>
        public event getUserDeptCompletedEventHandler getUserDeptCompleted;
        
        /// <remarks/>
        public event getJhByGroupCompletedEventHandler getJhByGroupCompleted;
        
        /// <remarks/>
        public event getAllRecordByJhCompletedEventHandler getAllRecordByJhCompleted;
        
        /// <remarks/>
        public event getUserGroupCompletedEventHandler getUserGroupCompleted;
        
        /// <remarks/>
        public event getAutoCompletedEventHandler getAutoCompleted;
        
        /// <remarks/>
        public event getPlaceCompletedEventHandler getPlaceCompleted;
        
        /// <remarks/>
        public event getCZJLCompletedEventHandler getCZJLCompleted;
        
        /// <remarks/>
        public event getXFJLCompletedEventHandler getXFJLCompleted;
        
        /// <remarks/>
        public event getXFHZCompletedEventHandler getXFHZCompleted;
        
        /// <remarks/>
        public event getGYXFHZCompletedEventHandler getGYXFHZCompleted;
        
        /// <remarks/>
        public event getCustomerInfoByCardNoCompletedEventHandler getCustomerInfoByCardNoCompleted;
        
        /// <remarks/>
        public event getOtherRecordCompletedEventHandler getOtherRecordCompleted;
        
        /// <remarks/>
        public event getUnReceivedOtherCompletedEventHandler getUnReceivedOtherCompleted;
        
        /// <remarks/>
        public event getAllOtherRecordCompletedEventHandler getAllOtherRecordCompleted;
        
        /// <remarks/>
        public event getOtherRecordByTimeCompletedEventHandler getOtherRecordByTimeCompleted;
        
        /// <remarks/>
        public event getUnfinishedRecordCompletedEventHandler getUnfinishedRecordCompleted;
        
        /// <remarks/>
        public event getRecordByTimeCompletedEventHandler getRecordByTimeCompleted;
        
        /// <remarks/>
        public event getAllRecordCompletedEventHandler getAllRecordCompleted;
        
        /// <remarks/>
        public event addMoneyCompletedEventHandler addMoneyCompleted;
        
        /// <remarks/>
        public event AddMoneyManualCompletedEventHandler AddMoneyManualCompleted;
        
        /// <remarks/>
        public event getServerTimeCompletedEventHandler getServerTimeCompleted;
        
        /// <remarks/>
        public event getValidDateCompletedEventHandler getValidDateCompleted;
        
        /// <remarks/>
        public event getNewValidDateCompletedEventHandler getNewValidDateCompleted;
        
        /// <remarks/>
        public event setValidDateOnlyCompletedEventHandler setValidDateOnlyCompleted;
        
        /// <remarks/>
        public event setValidDateCompletedEventHandler setValidDateCompleted;
        
        /// <remarks/>
        public event deleteOtherRecordCompletedEventHandler deleteOtherRecordCompleted;
        
        /// <remarks/>
        public event deleteOtherRecordByIdCompletedEventHandler deleteOtherRecordByIdCompleted;
        
        /// <remarks/>
        public event importOtherRecordCompletedEventHandler importOtherRecordCompleted;
        
        /// <remarks/>
        public event importFLRecordCompletedEventHandler importFLRecordCompleted;
        
        /// <remarks/>
        public event getCanBuCompletedEventHandler getCanBuCompleted;
        
        /// <remarks/>
        public event canBuChengWuKaCompletedEventHandler canBuChengWuKaCompleted;
        
        /// <remarks/>
        public event getChongZhiCompletedEventHandler getChongZhiCompleted;
        
        /// <remarks/>
        public event getRyxxFLCompletedEventHandler getRyxxFLCompleted;
        
        /// <remarks/>
        public event getRyxxFLKaiCompletedEventHandler getRyxxFLKaiCompleted;
        
        /// <remarks/>
        public event getRyxxByOneFLCompletedEventHandler getRyxxByOneFLCompleted;
        
        /// <remarks/>
        public event existKhCompletedEventHandler existKhCompleted;
        
        /// <remarks/>
        public event getNewValidDateFLCompletedEventHandler getNewValidDateFLCompleted;
        
        /// <remarks/>
        public event setNewCardFLCompletedEventHandler setNewCardFLCompleted;
        
        /// <remarks/>
        public event KaiXinKaFLExistsCompletedEventHandler KaiXinKaFLExistsCompleted;
        
        /// <remarks/>
        public event KaiXinKaFLCompletedEventHandler KaiXinKaFLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setPlace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setPlace(int place) {
            this.Invoke("setPlace", new object[] {
                        place});
        }
        
        /// <remarks/>
        public void setPlaceAsync(int place) {
            this.setPlaceAsync(place, null);
        }
        
        /// <remarks/>
        public void setPlaceAsync(int place, object userState) {
            if ((this.setPlaceOperationCompleted == null)) {
                this.setPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPlaceOperationCompleted);
            }
            this.InvokeAsync("setPlace", new object[] {
                        place}, this.setPlaceOperationCompleted, userState);
        }
        
        private void OnsetPlaceOperationCompleted(object arg) {
            if ((this.setPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPlaceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWorkTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double getWorkTime(System.DateTime go, System.DateTime back, int pos, int flag) {
            object[] results = this.Invoke("getWorkTime", new object[] {
                        go,
                        back,
                        pos,
                        flag});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkTimeAsync(System.DateTime go, System.DateTime back, int pos, int flag) {
            this.getWorkTimeAsync(go, back, pos, flag, null);
        }
        
        /// <remarks/>
        public void getWorkTimeAsync(System.DateTime go, System.DateTime back, int pos, int flag, object userState) {
            if ((this.getWorkTimeOperationCompleted == null)) {
                this.getWorkTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkTimeOperationCompleted);
            }
            this.InvokeAsync("getWorkTime", new object[] {
                        go,
                        back,
                        pos,
                        flag}, this.getWorkTimeOperationCompleted, userState);
        }
        
        private void OngetWorkTimeOperationCompleted(object arg) {
            if ((this.getWorkTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkTimeCompleted(this, new getWorkTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getWorkMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double getWorkMoney(System.DateTime go, System.DateTime back, int pos, int flag, int ryCount) {
            object[] results = this.Invoke("getWorkMoney", new object[] {
                        go,
                        back,
                        pos,
                        flag,
                        ryCount});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getWorkMoneyAsync(System.DateTime go, System.DateTime back, int pos, int flag, int ryCount) {
            this.getWorkMoneyAsync(go, back, pos, flag, ryCount, null);
        }
        
        /// <remarks/>
        public void getWorkMoneyAsync(System.DateTime go, System.DateTime back, int pos, int flag, int ryCount, object userState) {
            if ((this.getWorkMoneyOperationCompleted == null)) {
                this.getWorkMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWorkMoneyOperationCompleted);
            }
            this.InvokeAsync("getWorkMoney", new object[] {
                        go,
                        back,
                        pos,
                        flag,
                        ryCount}, this.getWorkMoneyOperationCompleted, userState);
        }
        
        private void OngetWorkMoneyOperationCompleted(object arg) {
            if ((this.getWorkMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWorkMoneyCompleted(this, new getWorkMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getBackTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getBackTime(string r1, string r2, string a1, string a2, int flag, int pos) {
            object[] results = this.Invoke("getBackTime", new object[] {
                        r1,
                        r2,
                        a1,
                        a2,
                        flag,
                        pos});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getBackTimeAsync(string r1, string r2, string a1, string a2, int flag, int pos) {
            this.getBackTimeAsync(r1, r2, a1, a2, flag, pos, null);
        }
        
        /// <remarks/>
        public void getBackTimeAsync(string r1, string r2, string a1, string a2, int flag, int pos, object userState) {
            if ((this.getBackTimeOperationCompleted == null)) {
                this.getBackTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBackTimeOperationCompleted);
            }
            this.InvokeAsync("getBackTime", new object[] {
                        r1,
                        r2,
                        a1,
                        a2,
                        flag,
                        pos}, this.getBackTimeOperationCompleted, userState);
        }
        
        private void OngetBackTimeOperationCompleted(object arg) {
            if ((this.getBackTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBackTimeCompleted(this, new getBackTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMoneyThisMonth", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double getMoneyThisMonth(string workno) {
            object[] results = this.Invoke("getMoneyThisMonth", new object[] {
                        workno});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getMoneyThisMonthAsync(string workno) {
            this.getMoneyThisMonthAsync(workno, null);
        }
        
        /// <remarks/>
        public void getMoneyThisMonthAsync(string workno, object userState) {
            if ((this.getMoneyThisMonthOperationCompleted == null)) {
                this.getMoneyThisMonthOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMoneyThisMonthOperationCompleted);
            }
            this.InvokeAsync("getMoneyThisMonth", new object[] {
                        workno}, this.getMoneyThisMonthOperationCompleted, userState);
        }
        
        private void OngetMoneyThisMonthOperationCompleted(object arg) {
            if ((this.getMoneyThisMonthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMoneyThisMonthCompleted(this, new getMoneyThisMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/hasUnReceivedMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool hasUnReceivedMoney(string workno, int flag, int _place) {
            object[] results = this.Invoke("hasUnReceivedMoney", new object[] {
                        workno,
                        flag,
                        _place});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void hasUnReceivedMoneyAsync(string workno, int flag, int _place) {
            this.hasUnReceivedMoneyAsync(workno, flag, _place, null);
        }
        
        /// <remarks/>
        public void hasUnReceivedMoneyAsync(string workno, int flag, int _place, object userState) {
            if ((this.hasUnReceivedMoneyOperationCompleted == null)) {
                this.hasUnReceivedMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhasUnReceivedMoneyOperationCompleted);
            }
            this.InvokeAsync("hasUnReceivedMoney", new object[] {
                        workno,
                        flag,
                        _place}, this.hasUnReceivedMoneyOperationCompleted, userState);
        }
        
        private void OnhasUnReceivedMoneyOperationCompleted(object arg) {
            if ((this.hasUnReceivedMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.hasUnReceivedMoneyCompleted(this, new hasUnReceivedMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isLastReceiveMoreThan16", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isLastReceiveMoreThan16(string kh) {
            object[] results = this.Invoke("isLastReceiveMoreThan16", new object[] {
                        kh});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isLastReceiveMoreThan16Async(string kh) {
            this.isLastReceiveMoreThan16Async(kh, null);
        }
        
        /// <remarks/>
        public void isLastReceiveMoreThan16Async(string kh, object userState) {
            if ((this.isLastReceiveMoreThan16OperationCompleted == null)) {
                this.isLastReceiveMoreThan16OperationCompleted = new System.Threading.SendOrPostCallback(this.OnisLastReceiveMoreThan16OperationCompleted);
            }
            this.InvokeAsync("isLastReceiveMoreThan16", new object[] {
                        kh}, this.isLastReceiveMoreThan16OperationCompleted, userState);
        }
        
        private void OnisLastReceiveMoreThan16OperationCompleted(object arg) {
            if ((this.isLastReceiveMoreThan16Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isLastReceiveMoreThan16Completed(this, new isLastReceiveMoreThan16CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePasswd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePasswd(string sqlstr) {
            object[] results = this.Invoke("updatePasswd", new object[] {
                        sqlstr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePasswdAsync(string sqlstr) {
            this.updatePasswdAsync(sqlstr, null);
        }
        
        /// <remarks/>
        public void updatePasswdAsync(string sqlstr, object userState) {
            if ((this.updatePasswdOperationCompleted == null)) {
                this.updatePasswdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePasswdOperationCompleted);
            }
            this.InvokeAsync("updatePasswd", new object[] {
                        sqlstr}, this.updatePasswdOperationCompleted, userState);
        }
        
        private void OnupdatePasswdOperationCompleted(object arg) {
            if ((this.updatePasswdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePasswdCompleted(this, new updatePasswdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginIP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginIP(string ipAddr) {
            object[] results = this.Invoke("LoginIP", new object[] {
                        ipAddr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginIPAsync(string ipAddr) {
            this.LoginIPAsync(ipAddr, null);
        }
        
        /// <remarks/>
        public void LoginIPAsync(string ipAddr, object userState) {
            if ((this.LoginIPOperationCompleted == null)) {
                this.LoginIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginIPOperationCompleted);
            }
            this.InvokeAsync("LoginIP", new object[] {
                        ipAddr}, this.LoginIPOperationCompleted, userState);
        }
        
        private void OnLoginIPOperationCompleted(object arg) {
            if ((this.LoginIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginIPCompleted(this, new LoginIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Login(string user, string pass) {
            object[] results = this.Invoke("Login", new object[] {
                        user,
                        pass});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string user, string pass) {
            this.LoginAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string user, string pass, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        user,
                        pass}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginWeb", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LoginWeb(string user, string pass) {
            object[] results = this.Invoke("LoginWeb", new object[] {
                        user,
                        pass});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LoginWebAsync(string user, string pass) {
            this.LoginWebAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void LoginWebAsync(string user, string pass, object userState) {
            if ((this.LoginWebOperationCompleted == null)) {
                this.LoginWebOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginWebOperationCompleted);
            }
            this.InvokeAsync("LoginWeb", new object[] {
                        user,
                        pass}, this.LoginWebOperationCompleted, userState);
        }
        
        private void OnLoginWebOperationCompleted(object arg) {
            if ((this.LoginWebCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginWebCompleted(this, new LoginWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserDept", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserDept(string user) {
            object[] results = this.Invoke("getUserDept", new object[] {
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserDeptAsync(string user) {
            this.getUserDeptAsync(user, null);
        }
        
        /// <remarks/>
        public void getUserDeptAsync(string user, object userState) {
            if ((this.getUserDeptOperationCompleted == null)) {
                this.getUserDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserDeptOperationCompleted);
            }
            this.InvokeAsync("getUserDept", new object[] {
                        user}, this.getUserDeptOperationCompleted, userState);
        }
        
        private void OngetUserDeptOperationCompleted(object arg) {
            if ((this.getUserDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserDeptCompleted(this, new getUserDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getJhByGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getJhByGroup(string group) {
            object[] results = this.Invoke("getJhByGroup", new object[] {
                        group});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getJhByGroupAsync(string group) {
            this.getJhByGroupAsync(group, null);
        }
        
        /// <remarks/>
        public void getJhByGroupAsync(string group, object userState) {
            if ((this.getJhByGroupOperationCompleted == null)) {
                this.getJhByGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJhByGroupOperationCompleted);
            }
            this.InvokeAsync("getJhByGroup", new object[] {
                        group}, this.getJhByGroupOperationCompleted, userState);
        }
        
        private void OngetJhByGroupOperationCompleted(object arg) {
            if ((this.getJhByGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJhByGroupCompleted(this, new getJhByGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllRecordByJh", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllRecordByJh(string jh) {
            object[] results = this.Invoke("getAllRecordByJh", new object[] {
                        jh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllRecordByJhAsync(string jh) {
            this.getAllRecordByJhAsync(jh, null);
        }
        
        /// <remarks/>
        public void getAllRecordByJhAsync(string jh, object userState) {
            if ((this.getAllRecordByJhOperationCompleted == null)) {
                this.getAllRecordByJhOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRecordByJhOperationCompleted);
            }
            this.InvokeAsync("getAllRecordByJh", new object[] {
                        jh}, this.getAllRecordByJhOperationCompleted, userState);
        }
        
        private void OngetAllRecordByJhOperationCompleted(object arg) {
            if ((this.getAllRecordByJhCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRecordByJhCompleted(this, new getAllRecordByJhCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUserGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getUserGroup(string user) {
            object[] results = this.Invoke("getUserGroup", new object[] {
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getUserGroupAsync(string user) {
            this.getUserGroupAsync(user, null);
        }
        
        /// <remarks/>
        public void getUserGroupAsync(string user, object userState) {
            if ((this.getUserGroupOperationCompleted == null)) {
                this.getUserGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserGroupOperationCompleted);
            }
            this.InvokeAsync("getUserGroup", new object[] {
                        user}, this.getUserGroupOperationCompleted, userState);
        }
        
        private void OngetUserGroupOperationCompleted(object arg) {
            if ((this.getUserGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserGroupCompleted(this, new getUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAuto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAuto(string user) {
            object[] results = this.Invoke("getAuto", new object[] {
                        user});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAutoAsync(string user) {
            this.getAutoAsync(user, null);
        }
        
        /// <remarks/>
        public void getAutoAsync(string user, object userState) {
            if ((this.getAutoOperationCompleted == null)) {
                this.getAutoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutoOperationCompleted);
            }
            this.InvokeAsync("getAuto", new object[] {
                        user}, this.getAutoOperationCompleted, userState);
        }
        
        private void OngetAutoOperationCompleted(object arg) {
            if ((this.getAutoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAutoCompleted(this, new getAutoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPlace", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int getPlace(string user) {
            object[] results = this.Invoke("getPlace", new object[] {
                        user});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getPlaceAsync(string user) {
            this.getPlaceAsync(user, null);
        }
        
        /// <remarks/>
        public void getPlaceAsync(string user, object userState) {
            if ((this.getPlaceOperationCompleted == null)) {
                this.getPlaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlaceOperationCompleted);
            }
            this.InvokeAsync("getPlace", new object[] {
                        user}, this.getPlaceOperationCompleted, userState);
        }
        
        private void OngetPlaceOperationCompleted(object arg) {
            if ((this.getPlaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlaceCompleted(this, new getPlaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCZJL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCZJL(string startDate, string endDate, string dept) {
            object[] results = this.Invoke("getCZJL", new object[] {
                        startDate,
                        endDate,
                        dept});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCZJLAsync(string startDate, string endDate, string dept) {
            this.getCZJLAsync(startDate, endDate, dept, null);
        }
        
        /// <remarks/>
        public void getCZJLAsync(string startDate, string endDate, string dept, object userState) {
            if ((this.getCZJLOperationCompleted == null)) {
                this.getCZJLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCZJLOperationCompleted);
            }
            this.InvokeAsync("getCZJL", new object[] {
                        startDate,
                        endDate,
                        dept}, this.getCZJLOperationCompleted, userState);
        }
        
        private void OngetCZJLOperationCompleted(object arg) {
            if ((this.getCZJLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCZJLCompleted(this, new getCZJLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getXFJL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getXFJL(string startDate, string endDate, string dept, string groups, string jh) {
            object[] results = this.Invoke("getXFJL", new object[] {
                        startDate,
                        endDate,
                        dept,
                        groups,
                        jh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getXFJLAsync(string startDate, string endDate, string dept, string groups, string jh) {
            this.getXFJLAsync(startDate, endDate, dept, groups, jh, null);
        }
        
        /// <remarks/>
        public void getXFJLAsync(string startDate, string endDate, string dept, string groups, string jh, object userState) {
            if ((this.getXFJLOperationCompleted == null)) {
                this.getXFJLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXFJLOperationCompleted);
            }
            this.InvokeAsync("getXFJL", new object[] {
                        startDate,
                        endDate,
                        dept,
                        groups,
                        jh}, this.getXFJLOperationCompleted, userState);
        }
        
        private void OngetXFJLOperationCompleted(object arg) {
            if ((this.getXFJLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXFJLCompleted(this, new getXFJLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getXFHZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getXFHZ(string startDate, string endDate, string groups) {
            object[] results = this.Invoke("getXFHZ", new object[] {
                        startDate,
                        endDate,
                        groups});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getXFHZAsync(string startDate, string endDate, string groups) {
            this.getXFHZAsync(startDate, endDate, groups, null);
        }
        
        /// <remarks/>
        public void getXFHZAsync(string startDate, string endDate, string groups, object userState) {
            if ((this.getXFHZOperationCompleted == null)) {
                this.getXFHZOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetXFHZOperationCompleted);
            }
            this.InvokeAsync("getXFHZ", new object[] {
                        startDate,
                        endDate,
                        groups}, this.getXFHZOperationCompleted, userState);
        }
        
        private void OngetXFHZOperationCompleted(object arg) {
            if ((this.getXFHZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getXFHZCompleted(this, new getXFHZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getGYXFHZ", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getGYXFHZ(string startDate, string endDate, string groups, string jh) {
            object[] results = this.Invoke("getGYXFHZ", new object[] {
                        startDate,
                        endDate,
                        groups,
                        jh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getGYXFHZAsync(string startDate, string endDate, string groups, string jh) {
            this.getGYXFHZAsync(startDate, endDate, groups, jh, null);
        }
        
        /// <remarks/>
        public void getGYXFHZAsync(string startDate, string endDate, string groups, string jh, object userState) {
            if ((this.getGYXFHZOperationCompleted == null)) {
                this.getGYXFHZOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGYXFHZOperationCompleted);
            }
            this.InvokeAsync("getGYXFHZ", new object[] {
                        startDate,
                        endDate,
                        groups,
                        jh}, this.getGYXFHZOperationCompleted, userState);
        }
        
        private void OngetGYXFHZOperationCompleted(object arg) {
            if ((this.getGYXFHZCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGYXFHZCompleted(this, new getGYXFHZCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCustomerInfoByCardNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCustomerInfoByCardNo(string cardno) {
            object[] results = this.Invoke("getCustomerInfoByCardNo", new object[] {
                        cardno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCustomerInfoByCardNoAsync(string cardno) {
            this.getCustomerInfoByCardNoAsync(cardno, null);
        }
        
        /// <remarks/>
        public void getCustomerInfoByCardNoAsync(string cardno, object userState) {
            if ((this.getCustomerInfoByCardNoOperationCompleted == null)) {
                this.getCustomerInfoByCardNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCustomerInfoByCardNoOperationCompleted);
            }
            this.InvokeAsync("getCustomerInfoByCardNo", new object[] {
                        cardno}, this.getCustomerInfoByCardNoOperationCompleted, userState);
        }
        
        private void OngetCustomerInfoByCardNoOperationCompleted(object arg) {
            if ((this.getCustomerInfoByCardNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCustomerInfoByCardNoCompleted(this, new getCustomerInfoByCardNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOtherRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getOtherRecord(string workno) {
            object[] results = this.Invoke("getOtherRecord", new object[] {
                        workno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getOtherRecordAsync(string workno) {
            this.getOtherRecordAsync(workno, null);
        }
        
        /// <remarks/>
        public void getOtherRecordAsync(string workno, object userState) {
            if ((this.getOtherRecordOperationCompleted == null)) {
                this.getOtherRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOtherRecordOperationCompleted);
            }
            this.InvokeAsync("getOtherRecord", new object[] {
                        workno}, this.getOtherRecordOperationCompleted, userState);
        }
        
        private void OngetOtherRecordOperationCompleted(object arg) {
            if ((this.getOtherRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOtherRecordCompleted(this, new getOtherRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUnReceivedOther", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getUnReceivedOther(string user) {
            object[] results = this.Invoke("getUnReceivedOther", new object[] {
                        user});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getUnReceivedOtherAsync(string user) {
            this.getUnReceivedOtherAsync(user, null);
        }
        
        /// <remarks/>
        public void getUnReceivedOtherAsync(string user, object userState) {
            if ((this.getUnReceivedOtherOperationCompleted == null)) {
                this.getUnReceivedOtherOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnReceivedOtherOperationCompleted);
            }
            this.InvokeAsync("getUnReceivedOther", new object[] {
                        user}, this.getUnReceivedOtherOperationCompleted, userState);
        }
        
        private void OngetUnReceivedOtherOperationCompleted(object arg) {
            if ((this.getUnReceivedOtherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnReceivedOtherCompleted(this, new getUnReceivedOtherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllOtherRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllOtherRecord(string workno) {
            object[] results = this.Invoke("getAllOtherRecord", new object[] {
                        workno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllOtherRecordAsync(string workno) {
            this.getAllOtherRecordAsync(workno, null);
        }
        
        /// <remarks/>
        public void getAllOtherRecordAsync(string workno, object userState) {
            if ((this.getAllOtherRecordOperationCompleted == null)) {
                this.getAllOtherRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllOtherRecordOperationCompleted);
            }
            this.InvokeAsync("getAllOtherRecord", new object[] {
                        workno}, this.getAllOtherRecordOperationCompleted, userState);
        }
        
        private void OngetAllOtherRecordOperationCompleted(object arg) {
            if ((this.getAllOtherRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllOtherRecordCompleted(this, new getAllOtherRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getOtherRecordByTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getOtherRecordByTime(string workno, string start, string end) {
            object[] results = this.Invoke("getOtherRecordByTime", new object[] {
                        workno,
                        start,
                        end});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getOtherRecordByTimeAsync(string workno, string start, string end) {
            this.getOtherRecordByTimeAsync(workno, start, end, null);
        }
        
        /// <remarks/>
        public void getOtherRecordByTimeAsync(string workno, string start, string end, object userState) {
            if ((this.getOtherRecordByTimeOperationCompleted == null)) {
                this.getOtherRecordByTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOtherRecordByTimeOperationCompleted);
            }
            this.InvokeAsync("getOtherRecordByTime", new object[] {
                        workno,
                        start,
                        end}, this.getOtherRecordByTimeOperationCompleted, userState);
        }
        
        private void OngetOtherRecordByTimeOperationCompleted(object arg) {
            if ((this.getOtherRecordByTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOtherRecordByTimeCompleted(this, new getOtherRecordByTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUnfinishedRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getUnfinishedRecord(string workno, int _place) {
            object[] results = this.Invoke("getUnfinishedRecord", new object[] {
                        workno,
                        _place});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getUnfinishedRecordAsync(string workno, int _place) {
            this.getUnfinishedRecordAsync(workno, _place, null);
        }
        
        /// <remarks/>
        public void getUnfinishedRecordAsync(string workno, int _place, object userState) {
            if ((this.getUnfinishedRecordOperationCompleted == null)) {
                this.getUnfinishedRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnfinishedRecordOperationCompleted);
            }
            this.InvokeAsync("getUnfinishedRecord", new object[] {
                        workno,
                        _place}, this.getUnfinishedRecordOperationCompleted, userState);
        }
        
        private void OngetUnfinishedRecordOperationCompleted(object arg) {
            if ((this.getUnfinishedRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnfinishedRecordCompleted(this, new getUnfinishedRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRecordByTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getRecordByTime(string workno, string start, string end, int _place) {
            object[] results = this.Invoke("getRecordByTime", new object[] {
                        workno,
                        start,
                        end,
                        _place});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getRecordByTimeAsync(string workno, string start, string end, int _place) {
            this.getRecordByTimeAsync(workno, start, end, _place, null);
        }
        
        /// <remarks/>
        public void getRecordByTimeAsync(string workno, string start, string end, int _place, object userState) {
            if ((this.getRecordByTimeOperationCompleted == null)) {
                this.getRecordByTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecordByTimeOperationCompleted);
            }
            this.InvokeAsync("getRecordByTime", new object[] {
                        workno,
                        start,
                        end,
                        _place}, this.getRecordByTimeOperationCompleted, userState);
        }
        
        private void OngetRecordByTimeOperationCompleted(object arg) {
            if ((this.getRecordByTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecordByTimeCompleted(this, new getRecordByTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAllRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getAllRecord(string workno, int _place) {
            object[] results = this.Invoke("getAllRecord", new object[] {
                        workno,
                        _place});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getAllRecordAsync(string workno, int _place) {
            this.getAllRecordAsync(workno, _place, null);
        }
        
        /// <remarks/>
        public void getAllRecordAsync(string workno, int _place, object userState) {
            if ((this.getAllRecordOperationCompleted == null)) {
                this.getAllRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRecordOperationCompleted);
            }
            this.InvokeAsync("getAllRecord", new object[] {
                        workno,
                        _place}, this.getAllRecordOperationCompleted, userState);
        }
        
        private void OngetAllRecordOperationCompleted(object arg) {
            if ((this.getAllRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRecordCompleted(this, new getAllRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addMoney", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool addMoney(int customerid, string cardno, string workno, string workname, string ids, System.Data.DataTable dt, double Money, double totalMoney, string ip, string oper, int flag, int _place) {
            object[] results = this.Invoke("addMoney", new object[] {
                        customerid,
                        cardno,
                        workno,
                        workname,
                        ids,
                        dt,
                        Money,
                        totalMoney,
                        ip,
                        oper,
                        flag,
                        _place});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void addMoneyAsync(int customerid, string cardno, string workno, string workname, string ids, System.Data.DataTable dt, double Money, double totalMoney, string ip, string oper, int flag, int _place) {
            this.addMoneyAsync(customerid, cardno, workno, workname, ids, dt, Money, totalMoney, ip, oper, flag, _place, null);
        }
        
        /// <remarks/>
        public void addMoneyAsync(int customerid, string cardno, string workno, string workname, string ids, System.Data.DataTable dt, double Money, double totalMoney, string ip, string oper, int flag, int _place, object userState) {
            if ((this.addMoneyOperationCompleted == null)) {
                this.addMoneyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMoneyOperationCompleted);
            }
            this.InvokeAsync("addMoney", new object[] {
                        customerid,
                        cardno,
                        workno,
                        workname,
                        ids,
                        dt,
                        Money,
                        totalMoney,
                        ip,
                        oper,
                        flag,
                        _place}, this.addMoneyOperationCompleted, userState);
        }
        
        private void OnaddMoneyOperationCompleted(object arg) {
            if ((this.addMoneyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addMoneyCompleted(this, new addMoneyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddMoneyManual", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddMoneyManual(int customerid, string cardno, string workno, string workname, string cc, string kd, double Money, double totalMoney, string ipAddr, string oper, int flag) {
            object[] results = this.Invoke("AddMoneyManual", new object[] {
                        customerid,
                        cardno,
                        workno,
                        workname,
                        cc,
                        kd,
                        Money,
                        totalMoney,
                        ipAddr,
                        oper,
                        flag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddMoneyManualAsync(int customerid, string cardno, string workno, string workname, string cc, string kd, double Money, double totalMoney, string ipAddr, string oper, int flag) {
            this.AddMoneyManualAsync(customerid, cardno, workno, workname, cc, kd, Money, totalMoney, ipAddr, oper, flag, null);
        }
        
        /// <remarks/>
        public void AddMoneyManualAsync(int customerid, string cardno, string workno, string workname, string cc, string kd, double Money, double totalMoney, string ipAddr, string oper, int flag, object userState) {
            if ((this.AddMoneyManualOperationCompleted == null)) {
                this.AddMoneyManualOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMoneyManualOperationCompleted);
            }
            this.InvokeAsync("AddMoneyManual", new object[] {
                        customerid,
                        cardno,
                        workno,
                        workname,
                        cc,
                        kd,
                        Money,
                        totalMoney,
                        ipAddr,
                        oper,
                        flag}, this.AddMoneyManualOperationCompleted, userState);
        }
        
        private void OnAddMoneyManualOperationCompleted(object arg) {
            if ((this.AddMoneyManualCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMoneyManualCompleted(this, new AddMoneyManualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getServerTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getServerTime() {
            object[] results = this.Invoke("getServerTime", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getServerTimeAsync() {
            this.getServerTimeAsync(null);
        }
        
        /// <remarks/>
        public void getServerTimeAsync(object userState) {
            if ((this.getServerTimeOperationCompleted == null)) {
                this.getServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerTimeOperationCompleted);
            }
            this.InvokeAsync("getServerTime", new object[0], this.getServerTimeOperationCompleted, userState);
        }
        
        private void OngetServerTimeOperationCompleted(object arg) {
            if ((this.getServerTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerTimeCompleted(this, new getServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getValidDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getValidDate(string workno) {
            object[] results = this.Invoke("getValidDate", new object[] {
                        workno});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getValidDateAsync(string workno) {
            this.getValidDateAsync(workno, null);
        }
        
        /// <remarks/>
        public void getValidDateAsync(string workno, object userState) {
            if ((this.getValidDateOperationCompleted == null)) {
                this.getValidDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetValidDateOperationCompleted);
            }
            this.InvokeAsync("getValidDate", new object[] {
                        workno}, this.getValidDateOperationCompleted, userState);
        }
        
        private void OngetValidDateOperationCompleted(object arg) {
            if ((this.getValidDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getValidDateCompleted(this, new getValidDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNewValidDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getNewValidDate() {
            object[] results = this.Invoke("getNewValidDate", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getNewValidDateAsync() {
            this.getNewValidDateAsync(null);
        }
        
        /// <remarks/>
        public void getNewValidDateAsync(object userState) {
            if ((this.getNewValidDateOperationCompleted == null)) {
                this.getNewValidDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewValidDateOperationCompleted);
            }
            this.InvokeAsync("getNewValidDate", new object[0], this.getNewValidDateOperationCompleted, userState);
        }
        
        private void OngetNewValidDateOperationCompleted(object arg) {
            if ((this.getNewValidDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewValidDateCompleted(this, new getNewValidDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setValidDateOnly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setValidDateOnly(string workno, System.DateTime vDate) {
            object[] results = this.Invoke("setValidDateOnly", new object[] {
                        workno,
                        vDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setValidDateOnlyAsync(string workno, System.DateTime vDate) {
            this.setValidDateOnlyAsync(workno, vDate, null);
        }
        
        /// <remarks/>
        public void setValidDateOnlyAsync(string workno, System.DateTime vDate, object userState) {
            if ((this.setValidDateOnlyOperationCompleted == null)) {
                this.setValidDateOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetValidDateOnlyOperationCompleted);
            }
            this.InvokeAsync("setValidDateOnly", new object[] {
                        workno,
                        vDate}, this.setValidDateOnlyOperationCompleted, userState);
        }
        
        private void OnsetValidDateOnlyOperationCompleted(object arg) {
            if ((this.setValidDateOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setValidDateOnlyCompleted(this, new setValidDateOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setValidDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int setValidDate(string workno, System.DateTime ov, double cMoney, double money, int customerid, string cardno, string ip, string oper, int _place) {
            object[] results = this.Invoke("setValidDate", new object[] {
                        workno,
                        ov,
                        cMoney,
                        money,
                        customerid,
                        cardno,
                        ip,
                        oper,
                        _place});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void setValidDateAsync(string workno, System.DateTime ov, double cMoney, double money, int customerid, string cardno, string ip, string oper, int _place) {
            this.setValidDateAsync(workno, ov, cMoney, money, customerid, cardno, ip, oper, _place, null);
        }
        
        /// <remarks/>
        public void setValidDateAsync(string workno, System.DateTime ov, double cMoney, double money, int customerid, string cardno, string ip, string oper, int _place, object userState) {
            if ((this.setValidDateOperationCompleted == null)) {
                this.setValidDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetValidDateOperationCompleted);
            }
            this.InvokeAsync("setValidDate", new object[] {
                        workno,
                        ov,
                        cMoney,
                        money,
                        customerid,
                        cardno,
                        ip,
                        oper,
                        _place}, this.setValidDateOperationCompleted, userState);
        }
        
        private void OnsetValidDateOperationCompleted(object arg) {
            if ((this.setValidDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setValidDateCompleted(this, new setValidDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteOtherRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteOtherRecord(int batid, string workno) {
            object[] results = this.Invoke("deleteOtherRecord", new object[] {
                        batid,
                        workno});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteOtherRecordAsync(int batid, string workno) {
            this.deleteOtherRecordAsync(batid, workno, null);
        }
        
        /// <remarks/>
        public void deleteOtherRecordAsync(int batid, string workno, object userState) {
            if ((this.deleteOtherRecordOperationCompleted == null)) {
                this.deleteOtherRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOtherRecordOperationCompleted);
            }
            this.InvokeAsync("deleteOtherRecord", new object[] {
                        batid,
                        workno}, this.deleteOtherRecordOperationCompleted, userState);
        }
        
        private void OndeleteOtherRecordOperationCompleted(object arg) {
            if ((this.deleteOtherRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteOtherRecordCompleted(this, new deleteOtherRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteOtherRecordById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteOtherRecordById(int id) {
            object[] results = this.Invoke("deleteOtherRecordById", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteOtherRecordByIdAsync(int id) {
            this.deleteOtherRecordByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteOtherRecordByIdAsync(int id, object userState) {
            if ((this.deleteOtherRecordByIdOperationCompleted == null)) {
                this.deleteOtherRecordByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOtherRecordByIdOperationCompleted);
            }
            this.InvokeAsync("deleteOtherRecordById", new object[] {
                        id}, this.deleteOtherRecordByIdOperationCompleted, userState);
        }
        
        private void OndeleteOtherRecordByIdOperationCompleted(object arg) {
            if ((this.deleteOtherRecordByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteOtherRecordByIdCompleted(this, new deleteOtherRecordByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/importOtherRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int importOtherRecord(System.Data.DataTable dt, string bat, string oper, string Ip) {
            object[] results = this.Invoke("importOtherRecord", new object[] {
                        dt,
                        bat,
                        oper,
                        Ip});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void importOtherRecordAsync(System.Data.DataTable dt, string bat, string oper, string Ip) {
            this.importOtherRecordAsync(dt, bat, oper, Ip, null);
        }
        
        /// <remarks/>
        public void importOtherRecordAsync(System.Data.DataTable dt, string bat, string oper, string Ip, object userState) {
            if ((this.importOtherRecordOperationCompleted == null)) {
                this.importOtherRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportOtherRecordOperationCompleted);
            }
            this.InvokeAsync("importOtherRecord", new object[] {
                        dt,
                        bat,
                        oper,
                        Ip}, this.importOtherRecordOperationCompleted, userState);
        }
        
        private void OnimportOtherRecordOperationCompleted(object arg) {
            if ((this.importOtherRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importOtherRecordCompleted(this, new importOtherRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/importFLRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int importFLRecord(System.Data.DataTable dt, string bat, string oper, string Ip) {
            object[] results = this.Invoke("importFLRecord", new object[] {
                        dt,
                        bat,
                        oper,
                        Ip});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void importFLRecordAsync(System.Data.DataTable dt, string bat, string oper, string Ip) {
            this.importFLRecordAsync(dt, bat, oper, Ip, null);
        }
        
        /// <remarks/>
        public void importFLRecordAsync(System.Data.DataTable dt, string bat, string oper, string Ip, object userState) {
            if ((this.importFLRecordOperationCompleted == null)) {
                this.importFLRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnimportFLRecordOperationCompleted);
            }
            this.InvokeAsync("importFLRecord", new object[] {
                        dt,
                        bat,
                        oper,
                        Ip}, this.importFLRecordOperationCompleted, userState);
        }
        
        private void OnimportFLRecordOperationCompleted(object arg) {
            if ((this.importFLRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.importFLRecordCompleted(this, new importFLRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCanBu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getCanBu(string work_no, System.DateTime kssj, System.DateTime jssj) {
            object[] results = this.Invoke("getCanBu", new object[] {
                        work_no,
                        kssj,
                        jssj});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getCanBuAsync(string work_no, System.DateTime kssj, System.DateTime jssj) {
            this.getCanBuAsync(work_no, kssj, jssj, null);
        }
        
        /// <remarks/>
        public void getCanBuAsync(string work_no, System.DateTime kssj, System.DateTime jssj, object userState) {
            if ((this.getCanBuOperationCompleted == null)) {
                this.getCanBuOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCanBuOperationCompleted);
            }
            this.InvokeAsync("getCanBu", new object[] {
                        work_no,
                        kssj,
                        jssj}, this.getCanBuOperationCompleted, userState);
        }
        
        private void OngetCanBuOperationCompleted(object arg) {
            if ((this.getCanBuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCanBuCompleted(this, new getCanBuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/canBuChengWuKa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool canBuChengWuKa(string bmmc) {
            object[] results = this.Invoke("canBuChengWuKa", new object[] {
                        bmmc});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void canBuChengWuKaAsync(string bmmc) {
            this.canBuChengWuKaAsync(bmmc, null);
        }
        
        /// <remarks/>
        public void canBuChengWuKaAsync(string bmmc, object userState) {
            if ((this.canBuChengWuKaOperationCompleted == null)) {
                this.canBuChengWuKaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncanBuChengWuKaOperationCompleted);
            }
            this.InvokeAsync("canBuChengWuKa", new object[] {
                        bmmc}, this.canBuChengWuKaOperationCompleted, userState);
        }
        
        private void OncanBuChengWuKaOperationCompleted(object arg) {
            if ((this.canBuChengWuKaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.canBuChengWuKaCompleted(this, new canBuChengWuKaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getChongZhi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getChongZhi(string rfkh) {
            object[] results = this.Invoke("getChongZhi", new object[] {
                        rfkh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getChongZhiAsync(string rfkh) {
            this.getChongZhiAsync(rfkh, null);
        }
        
        /// <remarks/>
        public void getChongZhiAsync(string rfkh, object userState) {
            if ((this.getChongZhiOperationCompleted == null)) {
                this.getChongZhiOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChongZhiOperationCompleted);
            }
            this.InvokeAsync("getChongZhi", new object[] {
                        rfkh}, this.getChongZhiOperationCompleted, userState);
        }
        
        private void OngetChongZhiOperationCompleted(object arg) {
            if ((this.getChongZhiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChongZhiCompleted(this, new getChongZhiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRyxxFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getRyxxFL(string bmmc) {
            object[] results = this.Invoke("getRyxxFL", new object[] {
                        bmmc});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getRyxxFLAsync(string bmmc) {
            this.getRyxxFLAsync(bmmc, null);
        }
        
        /// <remarks/>
        public void getRyxxFLAsync(string bmmc, object userState) {
            if ((this.getRyxxFLOperationCompleted == null)) {
                this.getRyxxFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRyxxFLOperationCompleted);
            }
            this.InvokeAsync("getRyxxFL", new object[] {
                        bmmc}, this.getRyxxFLOperationCompleted, userState);
        }
        
        private void OngetRyxxFLOperationCompleted(object arg) {
            if ((this.getRyxxFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRyxxFLCompleted(this, new getRyxxFLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRyxxFLKai", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getRyxxFLKai(string bmmc, bool showAll) {
            object[] results = this.Invoke("getRyxxFLKai", new object[] {
                        bmmc,
                        showAll});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getRyxxFLKaiAsync(string bmmc, bool showAll) {
            this.getRyxxFLKaiAsync(bmmc, showAll, null);
        }
        
        /// <remarks/>
        public void getRyxxFLKaiAsync(string bmmc, bool showAll, object userState) {
            if ((this.getRyxxFLKaiOperationCompleted == null)) {
                this.getRyxxFLKaiOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRyxxFLKaiOperationCompleted);
            }
            this.InvokeAsync("getRyxxFLKai", new object[] {
                        bmmc,
                        showAll}, this.getRyxxFLKaiOperationCompleted, userState);
        }
        
        private void OngetRyxxFLKaiOperationCompleted(object arg) {
            if ((this.getRyxxFLKaiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRyxxFLKaiCompleted(this, new getRyxxFLKaiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRyxxByOneFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getRyxxByOneFL(string rybh) {
            object[] results = this.Invoke("getRyxxByOneFL", new object[] {
                        rybh});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getRyxxByOneFLAsync(string rybh) {
            this.getRyxxByOneFLAsync(rybh, null);
        }
        
        /// <remarks/>
        public void getRyxxByOneFLAsync(string rybh, object userState) {
            if ((this.getRyxxByOneFLOperationCompleted == null)) {
                this.getRyxxByOneFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRyxxByOneFLOperationCompleted);
            }
            this.InvokeAsync("getRyxxByOneFL", new object[] {
                        rybh}, this.getRyxxByOneFLOperationCompleted, userState);
        }
        
        private void OngetRyxxByOneFLOperationCompleted(object arg) {
            if ((this.getRyxxByOneFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRyxxByOneFLCompleted(this, new getRyxxByOneFLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/existKh", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool existKh(int kh) {
            object[] results = this.Invoke("existKh", new object[] {
                        kh});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void existKhAsync(int kh) {
            this.existKhAsync(kh, null);
        }
        
        /// <remarks/>
        public void existKhAsync(int kh, object userState) {
            if ((this.existKhOperationCompleted == null)) {
                this.existKhOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexistKhOperationCompleted);
            }
            this.InvokeAsync("existKh", new object[] {
                        kh}, this.existKhOperationCompleted, userState);
        }
        
        private void OnexistKhOperationCompleted(object arg) {
            if ((this.existKhCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.existKhCompleted(this, new existKhCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getNewValidDateFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime getNewValidDateFL() {
            object[] results = this.Invoke("getNewValidDateFL", new object[0]);
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void getNewValidDateFLAsync() {
            this.getNewValidDateFLAsync(null);
        }
        
        /// <remarks/>
        public void getNewValidDateFLAsync(object userState) {
            if ((this.getNewValidDateFLOperationCompleted == null)) {
                this.getNewValidDateFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNewValidDateFLOperationCompleted);
            }
            this.InvokeAsync("getNewValidDateFL", new object[0], this.getNewValidDateFLOperationCompleted, userState);
        }
        
        private void OngetNewValidDateFLOperationCompleted(object arg) {
            if ((this.getNewValidDateFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNewValidDateFLCompleted(this, new getNewValidDateFLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setNewCardFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool setNewCardFL(string rybh, string ryxm, string bmmc, int jkh, int xkh, System.DateTime yxq, string czr, string ip) {
            object[] results = this.Invoke("setNewCardFL", new object[] {
                        rybh,
                        ryxm,
                        bmmc,
                        jkh,
                        xkh,
                        yxq,
                        czr,
                        ip});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void setNewCardFLAsync(string rybh, string ryxm, string bmmc, int jkh, int xkh, System.DateTime yxq, string czr, string ip) {
            this.setNewCardFLAsync(rybh, ryxm, bmmc, jkh, xkh, yxq, czr, ip, null);
        }
        
        /// <remarks/>
        public void setNewCardFLAsync(string rybh, string ryxm, string bmmc, int jkh, int xkh, System.DateTime yxq, string czr, string ip, object userState) {
            if ((this.setNewCardFLOperationCompleted == null)) {
                this.setNewCardFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetNewCardFLOperationCompleted);
            }
            this.InvokeAsync("setNewCardFL", new object[] {
                        rybh,
                        ryxm,
                        bmmc,
                        jkh,
                        xkh,
                        yxq,
                        czr,
                        ip}, this.setNewCardFLOperationCompleted, userState);
        }
        
        private void OnsetNewCardFLOperationCompleted(object arg) {
            if ((this.setNewCardFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setNewCardFLCompleted(this, new setNewCardFLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KaiXinKaFLExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool KaiXinKaFLExists(int kh, string czr, string ip) {
            object[] results = this.Invoke("KaiXinKaFLExists", new object[] {
                        kh,
                        czr,
                        ip});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void KaiXinKaFLExistsAsync(int kh, string czr, string ip) {
            this.KaiXinKaFLExistsAsync(kh, czr, ip, null);
        }
        
        /// <remarks/>
        public void KaiXinKaFLExistsAsync(int kh, string czr, string ip, object userState) {
            if ((this.KaiXinKaFLExistsOperationCompleted == null)) {
                this.KaiXinKaFLExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKaiXinKaFLExistsOperationCompleted);
            }
            this.InvokeAsync("KaiXinKaFLExists", new object[] {
                        kh,
                        czr,
                        ip}, this.KaiXinKaFLExistsOperationCompleted, userState);
        }
        
        private void OnKaiXinKaFLExistsOperationCompleted(object arg) {
            if ((this.KaiXinKaFLExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KaiXinKaFLExistsCompleted(this, new KaiXinKaFLExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KaiXinKaFL", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool KaiXinKaFL(string rybh, string ryxm, string bmmc, int kh, System.DateTime yxq, string czr, string ip) {
            object[] results = this.Invoke("KaiXinKaFL", new object[] {
                        rybh,
                        ryxm,
                        bmmc,
                        kh,
                        yxq,
                        czr,
                        ip});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void KaiXinKaFLAsync(string rybh, string ryxm, string bmmc, int kh, System.DateTime yxq, string czr, string ip) {
            this.KaiXinKaFLAsync(rybh, ryxm, bmmc, kh, yxq, czr, ip, null);
        }
        
        /// <remarks/>
        public void KaiXinKaFLAsync(string rybh, string ryxm, string bmmc, int kh, System.DateTime yxq, string czr, string ip, object userState) {
            if ((this.KaiXinKaFLOperationCompleted == null)) {
                this.KaiXinKaFLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKaiXinKaFLOperationCompleted);
            }
            this.InvokeAsync("KaiXinKaFL", new object[] {
                        rybh,
                        ryxm,
                        bmmc,
                        kh,
                        yxq,
                        czr,
                        ip}, this.KaiXinKaFLOperationCompleted, userState);
        }
        
        private void OnKaiXinKaFLOperationCompleted(object arg) {
            if ((this.KaiXinKaFLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KaiXinKaFLCompleted(this, new KaiXinKaFLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setPlaceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getWorkTimeCompletedEventHandler(object sender, getWorkTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getWorkMoneyCompletedEventHandler(object sender, getWorkMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWorkMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWorkMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getBackTimeCompletedEventHandler(object sender, getBackTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBackTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBackTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getMoneyThisMonthCompletedEventHandler(object sender, getMoneyThisMonthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMoneyThisMonthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMoneyThisMonthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void hasUnReceivedMoneyCompletedEventHandler(object sender, hasUnReceivedMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class hasUnReceivedMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal hasUnReceivedMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void isLastReceiveMoreThan16CompletedEventHandler(object sender, isLastReceiveMoreThan16CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isLastReceiveMoreThan16CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isLastReceiveMoreThan16CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void updatePasswdCompletedEventHandler(object sender, updatePasswdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePasswdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePasswdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginIPCompletedEventHandler(object sender, LoginIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginWebCompletedEventHandler(object sender, LoginWebCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginWebCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginWebCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getUserDeptCompletedEventHandler(object sender, getUserDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getJhByGroupCompletedEventHandler(object sender, getJhByGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJhByGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJhByGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAllRecordByJhCompletedEventHandler(object sender, getAllRecordByJhCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRecordByJhCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRecordByJhCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getUserGroupCompletedEventHandler(object sender, getUserGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAutoCompletedEventHandler(object sender, getAutoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAutoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAutoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getPlaceCompletedEventHandler(object sender, getPlaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getCZJLCompletedEventHandler(object sender, getCZJLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCZJLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCZJLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getXFJLCompletedEventHandler(object sender, getXFJLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXFJLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXFJLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getXFHZCompletedEventHandler(object sender, getXFHZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getXFHZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getXFHZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getGYXFHZCompletedEventHandler(object sender, getGYXFHZCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGYXFHZCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGYXFHZCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getCustomerInfoByCardNoCompletedEventHandler(object sender, getCustomerInfoByCardNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCustomerInfoByCardNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCustomerInfoByCardNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getOtherRecordCompletedEventHandler(object sender, getOtherRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOtherRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOtherRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getUnReceivedOtherCompletedEventHandler(object sender, getUnReceivedOtherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnReceivedOtherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnReceivedOtherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAllOtherRecordCompletedEventHandler(object sender, getAllOtherRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllOtherRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllOtherRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getOtherRecordByTimeCompletedEventHandler(object sender, getOtherRecordByTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOtherRecordByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOtherRecordByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getUnfinishedRecordCompletedEventHandler(object sender, getUnfinishedRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUnfinishedRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnfinishedRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRecordByTimeCompletedEventHandler(object sender, getRecordByTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecordByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecordByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getAllRecordCompletedEventHandler(object sender, getAllRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void addMoneyCompletedEventHandler(object sender, addMoneyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addMoneyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addMoneyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddMoneyManualCompletedEventHandler(object sender, AddMoneyManualCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMoneyManualCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMoneyManualCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getServerTimeCompletedEventHandler(object sender, getServerTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getValidDateCompletedEventHandler(object sender, getValidDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getValidDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getValidDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNewValidDateCompletedEventHandler(object sender, getNewValidDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewValidDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewValidDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setValidDateOnlyCompletedEventHandler(object sender, setValidDateOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setValidDateOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setValidDateOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setValidDateCompletedEventHandler(object sender, setValidDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setValidDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setValidDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteOtherRecordCompletedEventHandler(object sender, deleteOtherRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteOtherRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteOtherRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteOtherRecordByIdCompletedEventHandler(object sender, deleteOtherRecordByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteOtherRecordByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteOtherRecordByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void importOtherRecordCompletedEventHandler(object sender, importOtherRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importOtherRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importOtherRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void importFLRecordCompletedEventHandler(object sender, importFLRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class importFLRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal importFLRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getCanBuCompletedEventHandler(object sender, getCanBuCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCanBuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCanBuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void canBuChengWuKaCompletedEventHandler(object sender, canBuChengWuKaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class canBuChengWuKaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal canBuChengWuKaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getChongZhiCompletedEventHandler(object sender, getChongZhiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getChongZhiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChongZhiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRyxxFLCompletedEventHandler(object sender, getRyxxFLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRyxxFLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRyxxFLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRyxxFLKaiCompletedEventHandler(object sender, getRyxxFLKaiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRyxxFLKaiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRyxxFLKaiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getRyxxByOneFLCompletedEventHandler(object sender, getRyxxByOneFLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRyxxByOneFLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRyxxByOneFLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void existKhCompletedEventHandler(object sender, existKhCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class existKhCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal existKhCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNewValidDateFLCompletedEventHandler(object sender, getNewValidDateFLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNewValidDateFLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNewValidDateFLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void setNewCardFLCompletedEventHandler(object sender, setNewCardFLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setNewCardFLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setNewCardFLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void KaiXinKaFLExistsCompletedEventHandler(object sender, KaiXinKaFLExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KaiXinKaFLExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KaiXinKaFLExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void KaiXinKaFLCompletedEventHandler(object sender, KaiXinKaFLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KaiXinKaFLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KaiXinKaFLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591